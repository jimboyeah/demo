[{"C:\\coding\\md-code\\ts-demos\\react-ts\\src\\store.tsx":"1","C:\\coding\\md-code\\ts-demos\\react-ts\\src\\index.tsx":"2","C:\\coding\\md-code\\pacman\\src\\pacman\\tip.tsx":"3","C:\\coding\\md-code\\pacman\\src\\pacman\\map.ts":"4","C:\\coding\\md-code\\pacman\\src\\pacman\\audio.ts":"5","C:\\coding\\md-code\\pacman\\src\\index.tsx":"6","C:\\coding\\md-code\\pacman\\src\\pacman\\index.tsx":"7","C:\\coding\\md-code\\pacman\\src\\pacman\\stage.ts":"8","C:\\coding\\md-code\\pacman\\src\\pacman\\game.ts":"9","C:\\coding\\md-code\\pacman\\src\\reportWebVitals.ts":"10","C:\\coding\\md-code\\pacman\\src\\pacman\\level.ts":"11","C:\\coding\\md-code\\pacman\\src\\pacman\\actor.ts":"12"},{"size":1268,"mtime":1609873539967,"results":"13","hashOfConfig":"14"},{"size":831,"mtime":1611215765236,"results":"15","hashOfConfig":"14"},{"size":1868,"mtime":1611233182122,"results":"16","hashOfConfig":"17"},{"size":5776,"mtime":1611214025315,"results":"18","hashOfConfig":"17"},{"size":4239,"mtime":1611227270224,"results":"19","hashOfConfig":"17"},{"size":836,"mtime":1611233055275,"results":"20","hashOfConfig":"17"},{"size":30116,"mtime":1611229347762,"results":"21","hashOfConfig":"17"},{"size":3501,"mtime":1611228147493,"results":"22","hashOfConfig":"17"},{"size":5701,"mtime":1611229578023,"results":"23","hashOfConfig":"17"},{"size":425,"mtime":1609828560224,"results":"24","hashOfConfig":"17"},{"size":27568,"mtime":1611171111809,"results":"25","hashOfConfig":"17"},{"size":2206,"mtime":1611214044501,"results":"26","hashOfConfig":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tlceyz",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"id8ljh",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\coding\\md-code\\ts-demos\\react-ts\\src\\store.tsx",[],"C:\\coding\\md-code\\ts-demos\\react-ts\\src\\index.tsx",["55"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router, Route } from 'react-router';\nimport { createBrowserHistory } from \"history\";\nimport Pacman from './pacman';\n\nconst history = createBrowserHistory();\n// <Route path=\"/love\" component={App}/>\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Route path=\"/\" component={Pacman}/>\n      <Route path=\"/pacman\" component={Pacman}/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["56","57"],"C:\\coding\\md-code\\pacman\\src\\pacman\\tip.tsx",[],"C:\\coding\\md-code\\pacman\\src\\pacman\\map.ts",[],"C:\\coding\\md-code\\pacman\\src\\pacman\\audio.ts",["58","59","60","61","62","63"],"import Stage from './stage'\r\nimport Map, { Step } from './map'\r\nimport Game, { EventMap } from './game'\r\n\r\nconst Loop = require('./pacman10_looped.mp3')\r\nconst LoopRegular = require('./pacman10_regular.mp3')\r\n\r\nexport enum LoopEvent {\r\n    BGM1,\r\n    BGM2,\r\n    BGM3,\r\n    BGM,\r\n    Kill,\r\n    Power,\r\n    Welcome,\r\n    LevelUp,\r\n    LevelUp2,\r\n    Annihilate,\r\n    Dead,\r\n    Hit1,\r\n    Hit2,\r\n    Hit3,\r\n    PowerUp,\r\n    Dings,\r\n    Waves\r\n}\r\n/**\r\n * This is equivalent to:\r\n * type LoopName = 'BGM' | 'Kill' | 'Power' ... ;\r\n */\r\nexport type LoopName = keyof typeof LoopEvent;\r\n\r\nexport interface Loop {\r\n    start: number\r\n    end: number\r\n}\r\n\r\nexport interface LoopConfig {\r\n    src: string\r\n    loops: { [event in LoopName]?: { start: number, end: number } }\r\n}\r\n\r\nclass LoopAudio {\r\n\r\n    params: LoopConfig[]\r\n    loops: { [name in LoopName]?: Loop } = {}\r\n    audios: { [name: string]: HTMLAudioElement } = {}\r\n    sentinel: { [name: string]: number } = {}\r\n    notify: { [name in LoopName]?: (event: string) => void } = {}\r\n\r\n    constructor(params: LoopConfig[]) {\r\n        this.params = params;\r\n        for (let idx in params) {\r\n            let config = params[idx];\r\n            for (let event in config.loops) {\r\n                let name = event as LoopName;\r\n                this.loops[name] = config.loops[name];\r\n                let audio = new Audio(config.src);\r\n                audio.id = event;\r\n                audio.src = config.src;\r\n                audio.autoplay = false;\r\n                this.audios[event] = audio;\r\n                audio.addEventListener(\"playing\", (e) => {\r\n                    // console.log(e);\r\n                });\r\n                audio.addEventListener(\"pause\", (e) => {\r\n                    // console.log(e);\r\n                });\r\n                audio.addEventListener(\"seeking\", (e) => {\r\n                    // console.log(e);\r\n                });\r\n                audio.addEventListener(\"progress\", (e) => {\r\n                    // console.log(e);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    muteAll() {\r\n        for (let name in this.audios) {\r\n            this.audios[name].pause();\r\n            this.mute(name as LoopName);\r\n        }\r\n    }\r\n    mute(name: LoopName) {\r\n        let audio = this.audios[name]\r\n        audio.pause()\r\n        if (this.sentinel[name]) clearTimeout(this.sentinel[name])\r\n    }\r\n\r\n    tick(name: LoopName, audio: HTMLAudioElement, loop: boolean) {\r\n        audio.pause();\r\n        // console.log(name, audio, this);\r\n        if (loop) {\r\n            this.perform(name);\r\n        } else {\r\n            let notify = this.notify[name];\r\n            if (notify) notify(\"stop\");\r\n            delete this.notify[name];\r\n        }\r\n    }\r\n\r\n    perform(name: LoopName, loop: boolean = true, onStop = (e: string) => { }) {\r\n        let audio = this.audios[name];\r\n        let lp = this.loops[name];\r\n        // console.log(\"LoopName\", name, lp);\r\n        this.notify[name] = onStop;\r\n        if (lp) {\r\n            let elapse = lp.end - lp.start;\r\n            audio.currentTime = lp.start / 1000;\r\n            if (this.sentinel[name]) clearTimeout(this.sentinel[name]);\r\n            this.sentinel[name] = setTimeout(this.tick.bind(this), elapse, name, audio, loop);\r\n        }\r\n        audio.play();\r\n    }\r\n\r\n}\r\n\r\nexport default new LoopAudio([{\r\n    src: Loop.default,\r\n    loops: {\r\n        BGM1: { start: 0, end: 440 },\r\n        BGM2: { start: 1400, end: 1800 },\r\n        BGM3: { start: 2730, end: 3070 },\r\n        BGM: { start: 4030, end: 4330 },\r\n        Kill: { start: 5300, end: 5600 },\r\n        Power: { start: 6560, end: 7130 },\r\n        Welcome: { start: 8100, end: 13350 + 300 },\r\n        LevelUp: { start: 14350, end: 18560 },\r\n        LevelUp2: { start: 19500, end: 23745 },\r\n    }\r\n}, {\r\n    src: LoopRegular.default,\r\n    loops: {\r\n        Annihilate: { start: 70, end: 1230 },\r\n        Dead: { start: 2580, end: 4120 },\r\n        Hit1: { start: 5170, end: 5330 + 300 },\r\n        Hit2: { start: 6300, end: 6470 + 300 },\r\n        Hit3: { start: 7430, end: 7660 + 300 },\r\n        PowerUp: { start: 8660, end: 9240 },\r\n        Dings: { start: 10250, end: 12300 },\r\n        Waves: { start: 13300, end: 13790 },\r\n    }\r\n}\r\n]);\r\n","C:\\coding\\md-code\\pacman\\src\\index.tsx",[],"C:\\coding\\md-code\\pacman\\src\\pacman\\index.tsx",["64","65"],"C:\\coding\\md-code\\pacman\\src\\pacman\\stage.ts",[],"C:\\coding\\md-code\\pacman\\src\\pacman\\game.ts",["66"],"import Stage, { StageStatus } from './stage'\r\nimport Actor, { ActorStatus } from './actor'\r\n\r\ndeclare global {\r\n    interface Window {\r\n        mozRequestAnimationFrame?: () => {};\r\n        oRequestAnimationFrame?: () => {};\r\n        msRequestAnimationFrame?: () => {};\r\n    }\r\n}\r\n\r\nif (typeof Object.assign != 'function') {\r\n    Object.assign = function (target: any) {\r\n        'use strict';\r\n        if (target == null) {\r\n            throw new TypeError('Cannot convert undefined or null to object');\r\n        }\r\n\r\n        target = Object(target);\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var source = arguments[index];\r\n            if (source != null) {\r\n                for (var key in source) {\r\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n                        target[key] = source[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n}\r\n\r\n// requestID = window.requestAnimationFrame(callback);\r\nwindow.requestAnimationFrame = (function () {\r\n    if (!window.cancelAnimationFrame) {\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n    return window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        window.oRequestAnimationFrame ||\r\n        window.msRequestAnimationFrame ||\r\n        function (callback) {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n})();\r\n\r\nexport interface EventMap {\r\n    [type: string]: { [event: string]: (e: Event) => void };\r\n}\r\n\r\nexport default class Game {\r\n\r\n    width: number = 960\r\n    height: number = 640\r\n    canvas: HTMLCanvasElement\r\n    context: CanvasRenderingContext2D\r\n    stages: Stage[] = []\r\n    events: EventMap = {}\r\n    stageIndex = 0\r\n    animationHander: number = 0\r\n\r\n    constructor(id: string, props = {}) {\r\n        Object.assign(this, props);\r\n        let canvas = document.getElementById(id) as HTMLCanvasElement;\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n        this.canvas = canvas;\r\n        this.context = canvas.getContext('2d') || new CanvasRenderingContext2D();\r\n    }\r\n\r\n    start() {\r\n        var fs = 0;\r\n        let context = this.context;\r\n        var fn = () => {\r\n            let stage = this.stages[this.stageIndex];\r\n            context.clearRect(0, 0, this.width, this.height);\r\n            context.fillStyle = '#000000';\r\n            context.fillRect(0, 0, this.width, this.height);\r\n            fs++;\r\n            if (stage.timeout) {\r\n                stage.timeout--;\r\n            }\r\n            if (stage.update() !== false) {\r\n                stage.maps.forEach((map) => {\r\n                    if (!(fs % map.frames)) {\r\n                        map.times = fs / map.frames;\r\n                    }\r\n                    if (map.cache) {\r\n                        if (!map.imageData) {\r\n                            context.save();\r\n                            map.draw(context);\r\n                            map.imageData = context.getImageData(0, 0, this.width, this.height);\r\n                            context.restore();\r\n                        } else {\r\n                            context.putImageData(map.imageData, 0, 0);\r\n                        }\r\n                    } else {\r\n                        map.update();\r\n                        map.draw(context);\r\n                    }\r\n                });\r\n                stage.items.forEach((item: Actor) => {\r\n                    if (!(fs % item.frames)) {\r\n                        item.times = fs / item.frames;\r\n                    }\r\n                    if (stage.status === StageStatus.Normal && item.status !== ActorStatus.Pause) {\r\n                        if (item.location) {\r\n                            item.coord = item.location.position2coord(item.x, item.y);\r\n                        }\r\n                        if (item.timeout) {\r\n                            item.timeout--;\r\n                        }\r\n                        item.update();\r\n                    }\r\n                    item.draw(this.context);\r\n                });\r\n            }\r\n            this.animationHander = requestAnimationFrame(fn);\r\n        };\r\n        this.animationHander = requestAnimationFrame(fn);\r\n    }\r\n\r\n    stop() {\r\n        this.animationHander && cancelAnimationFrame(this.animationHander);\r\n    };\r\n\r\n    getPosition(e: MouseEvent) {\r\n        var box = this.canvas.getBoundingClientRect();\r\n        return {\r\n            x: e.clientX - box.left * (this.width / box.width),\r\n            y: e.clientY - box.top * (this.height / box.height)\r\n        };\r\n    }\r\n\r\n    createStage(options: Partial<Stage> = {}) {\r\n        var stage = new Stage(this, options);\r\n        stage.index = this.stages.length;\r\n        this.stages.push(stage);\r\n        stage.onInit();\r\n        return stage;\r\n    };\r\n\r\n    setStage(index: number) {\r\n        this.stages[this.stageIndex].status = StageStatus.Closed;\r\n        this.stages[this.stageIndex].onClose();\r\n        this.stageIndex = index;\r\n        this.stages[index].status = StageStatus.Normal;\r\n        this.stages[index].reset();\r\n        this.stages[index].onOpen();\r\n        return this.stages[index];\r\n    };\r\n\r\n    nextStage() {\r\n        if (this.stageIndex < this.stages.length - 1) {\r\n            return this.setStage(1 + this.stageIndex);\r\n        } else {\r\n            throw new Error('No more stage.');\r\n        }\r\n    };\r\n\r\n    getStages() {\r\n        return this.stages;\r\n    };\r\n\r\n    init() {\r\n        this.stageIndex = 0;\r\n        this.stages[0].onOpen();\r\n        this.start();\r\n    };\r\n\r\n}\r\n","C:\\coding\\md-code\\pacman\\src\\reportWebVitals.ts",[],"C:\\coding\\md-code\\pacman\\src\\pacman\\level.ts",[],"C:\\coding\\md-code\\pacman\\src\\pacman\\actor.ts",[],{"ruleId":"67","severity":1,"message":"68","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":11},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"67","severity":1,"message":"75","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"76","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":11},{"ruleId":"67","severity":1,"message":"77","line":2,"column":15,"nodeType":"69","messageId":"70","endLine":2,"endColumn":19},{"ruleId":"67","severity":1,"message":"78","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":12},{"ruleId":"67","severity":1,"message":"79","line":3,"column":16,"nodeType":"69","messageId":"70","endLine":3,"endColumn":24},{"ruleId":"80","severity":1,"message":"81","line":33,"column":18,"nodeType":"69","messageId":"82","endLine":33,"endColumn":22},{"ruleId":"67","severity":1,"message":"83","line":47,"column":13,"nodeType":"69","messageId":"70","endLine":47,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":526,"column":50,"nodeType":"86","messageId":"87","endLine":534,"endColumn":38},{"ruleId":"88","severity":1,"message":"89","line":14,"column":9,"nodeType":"90","messageId":"91","endLine":14,"endColumn":22,"fix":"92"},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"'Stage' is defined but never used.","'Map' is defined but never used.","'Step' is defined but never used.","'Game' is defined but never used.","'EventMap' is defined but never used.","@typescript-eslint/no-redeclare","'Loop' is already defined.","redeclared","'map' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pos', 'pos', 'pos', 'dist', 'pos', 'dist'.","FunctionExpression","unsafeRefs","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"95","text":"96"},"no-global-assign","no-unsafe-negation",[380,393],""]